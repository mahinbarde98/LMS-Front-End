{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport { user } from './user';\nexport let LoginComponent = class LoginComponent {\n  constructor(router, userService, loginService) {\n    this.router = router;\n    this.userService = userService;\n    this.loginService = loginService;\n    this.loginForm = new FormGroup({\n      username: new FormControl(''),\n      password: new FormControl('')\n    });\n    this.userObj = new user();\n  }\n  login() {\n    alert(\"logged in\");\n    // this.userObj.username.setValue(this.loginForm.email.value));\n    console.log(this.loginForm.value);\n    this.loginService.login(this.loginForm.value).subscribe(result => {\n      console.log(result);\n      console.log(result);\n      console.log(\"token : \", result.jwtToken);\n      console.log(\"role : \", result.role[0]);\n      this.userService.setRoles(result.role[0]);\n      this.userService.setToken(result.jwtToken);\n      //  console.log(\"token from storage : \" , this.userService.getToken())\n      this.router.navigate(['home']);\n      //  const role = (result.role[0]);\n      //  if(role==='admin' || 'user'){\n      //    this.router.navigate(['home']);}\n    }, error => {\n      console.log(error);\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","user","LoginComponent","constructor","router","userService","loginService","loginForm","username","password","userObj","login","alert","console","log","value","subscribe","result","jwtToken","role","setRoles","setToken","navigate","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\2101814\\OneDrive - Cognizant\\Pictures\\Loan Management Front-End\\LoanManagementApp\\src\\app\\component\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, NgForm } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services/login.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { user } from './user';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  constructor(private router:Router, private userService : UserService,private loginService: LoginService){}\n\n\n  loginForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl('')\n  })\n\n  private userObj:user = new user();\n\n\n\n login(){\n  alert(\"logged in\");\n // this.userObj.username.setValue(this.loginForm.email.value));\n  console.log(this.loginForm.value);\n\n  this.loginService.login(this.loginForm.value).subscribe((result)=>{\n   \n      \n      console.log(result);\n      console.log(result)\n       console.log(\"token : \",result.jwtToken)\n       console.log(\"role : \",(result.role[0]))\n\n       this.userService.setRoles((result.role[0]));\n       this.userService.setToken(result.jwtToken);\n      //  console.log(\"token from storage : \" , this.userService.getToken())\n       this.router.navigate(['home'])\n\n      //  const role = (result.role[0]);\n      //  if(role==='admin' || 'user'){\n      //    this.router.navigate(['home']);}\n\n    \n  },(error:any)=>{\n\n      console.log(error);\n    }\n  )\n }\n\n  \n}\n\n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,WAAW,QAAgB,gBAAgB;AACjE,SAASC,SAAS,QAAQ,gBAAgB;AAI1C,SAASC,IAAI,QAAQ,QAAQ;AAQtB,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAEzBC,YAAoBC,MAAa,EAAUC,WAAyB,EAASC,YAA0B;IAAnF,KAAAF,MAAM,GAANA,MAAM;IAAiB,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,YAAY,GAAZA,YAAY;IAGzF,KAAAC,SAAS,GAAG,IAAIP,SAAS,CAAC;MACxBQ,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,CAAC;MAC7BU,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE;KAC7B,CAAC;IAEM,KAAAW,OAAO,GAAQ,IAAIT,IAAI,EAAE;EARwE;EAY1GU,KAAKA,CAAA;IACJC,KAAK,CAAC,WAAW,CAAC;IACnB;IACCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,SAAS,CAACQ,KAAK,CAAC;IAEjC,IAAI,CAACT,YAAY,CAACK,KAAK,CAAC,IAAI,CAACJ,SAAS,CAACQ,KAAK,CAAC,CAACC,SAAS,CAAEC,MAAM,IAAG;MAG9DJ,OAAO,CAACC,GAAG,CAACG,MAAM,CAAC;MACnBJ,OAAO,CAACC,GAAG,CAACG,MAAM,CAAC;MAClBJ,OAAO,CAACC,GAAG,CAAC,UAAU,EAACG,MAAM,CAACC,QAAQ,CAAC;MACvCL,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEG,MAAM,CAACE,IAAI,CAAC,CAAC,CAAE,CAAC;MAEvC,IAAI,CAACd,WAAW,CAACe,QAAQ,CAAEH,MAAM,CAACE,IAAI,CAAC,CAAC,CAAE,CAAC;MAC3C,IAAI,CAACd,WAAW,CAACgB,QAAQ,CAACJ,MAAM,CAACC,QAAQ,CAAC;MAC3C;MACC,IAAI,CAACd,MAAM,CAACkB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;MAE/B;MACA;MACA;IAGJ,CAAC,EAAEC,KAAS,IAAG;MAEXV,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;IACpB,CAAC,CACF;EACF;CAGA;AA7CYrB,cAAc,GAAAsB,UAAA,EAL1B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWzB,cAAc,CA6C1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}