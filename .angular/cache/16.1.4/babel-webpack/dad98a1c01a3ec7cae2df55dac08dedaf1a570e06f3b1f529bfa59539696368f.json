{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoanService {\n  constructor(http) {\n    this.http = http;\n    this.apiLoan = 'http://localhost:8080/lms/addLoan';\n    this.getApi = 'http://localhost:8080/lms/all';\n    this.getbyidApi = 'http://localhost:8080/lms/findById';\n    this.putApi = 'http://localhost:8080/lms/updateLoan';\n  }\n  createNewLoan(data) {\n    return this.http.post(`${this.apiLoan}`, data);\n  }\n  getLoan() {\n    return this.http.get(`${this.getApi}`);\n  }\n  getById(id) {\n    return this.http.get(`${this.getbyidApi}/${id}`);\n  }\n  updateLoan(id, loan) {\n    return this.http.get(`${this.getbyidApi}/${id}`);\n  }\n}\nLoanService.ɵfac = function LoanService_Factory(t) {\n  return new (t || LoanService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoanService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoanService,\n  factory: LoanService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["LoanService","constructor","http","apiLoan","getApi","getbyidApi","putApi","createNewLoan","data","post","getLoan","get","getById","id","updateLoan","loan","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\2101814\\OneDrive - Cognizant\\Pictures\\Loan Management Front-End\\LoanManagementApp\\src\\app\\services\\loan.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoanService {\n\n  constructor(private http:HttpClient) { }\n\n  apiLoan='http://localhost:8080/lms/addLoan';\n  getApi='http://localhost:8080/lms/all';\n  getbyidApi ='http://localhost:8080/lms/findById';\n  putApi = 'http://localhost:8080/lms/updateLoan'\n\n  createNewLoan(data:any)\n  {\n    return this.http.post<any>(`${this.apiLoan}`,data);\n  }\n\n  getLoan(){\n    return this.http.get<any>(`${this.getApi}`);\n  }\n\n  getById(id:any){\n    return this.http.get<any>(`${this.getbyidApi}/${id}`);\n  }\n\n  updateLoan(id:any,loan:any){\n    return this.http.get<any>(`${this.getbyidApi}/${id}`);\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,OAAO,GAAC,mCAAmC;IAC3C,KAAAC,MAAM,GAAC,+BAA+B;IACtC,KAAAC,UAAU,GAAE,oCAAoC;IAChD,KAAAC,MAAM,GAAG,sCAAsC;EALR;EAOvCC,aAAaA,CAACC,IAAQ;IAEpB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAM,GAAG,IAAI,CAACN,OAAO,EAAE,EAACK,IAAI,CAAC;EACpD;EAEAE,OAAOA,CAAA;IACL,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAM,GAAG,IAAI,CAACP,MAAM,EAAE,CAAC;EAC7C;EAEAQ,OAAOA,CAACC,EAAM;IACZ,OAAO,IAAI,CAACX,IAAI,CAACS,GAAG,CAAM,GAAG,IAAI,CAACN,UAAU,IAAIQ,EAAE,EAAE,CAAC;EACvD;EAEAC,UAAUA,CAACD,EAAM,EAACE,IAAQ;IACxB,OAAO,IAAI,CAACb,IAAI,CAACS,GAAG,CAAM,GAAG,IAAI,CAACN,UAAU,IAAIQ,EAAE,EAAE,CAAC;EACvD;;AAxBWb,WAAW,C;mBAAXA,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXnB,WAAW,C;SAAXA,WAAW;EAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}